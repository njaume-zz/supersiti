<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EpsonFis.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAXQAAAAIB
        AAAAAQAAAAAAAAAAAAAAAEgAAACTsgAASAAAAAMACAAL8ldHIAAAAF8AZQB4AHQAZQBuAHQAeABPAwAA
        AwAIAAryV0fg////XwBlAHgAdABlAG4AdAB5AE8DAAAL
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABoQDcsFBAj/b1xNnoBiSzRaSkDRAAAAAAAAAAAAAAAAOyASh6ua
        jGoAAAAAAAAAAIhhRwt8al6i4tLBAwAAAAAAAAAAXkc+iLmsoWcAAAAAAAAAAJFwWhSrmo264dLFAgAA
        AACysK7wUlJS/25pZ++yl4UMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOiQXDxAKCuwRDw//jHVjTIdo
        TydOPjbgrpaCCwAAAAAAAAAAQCQVh6aXimoAAAAAAAAAAHtSOAh9bGCNxrGfAQAAAAAAAAAAalFDfL2w
        pGcAAAAAAAAAAJNvWROllYm+y7OhBgAAAAC8ta+Ph4eH/1hXV/+nkYJfAAAAAAAAAAAAAAAAAAAAAAAA
        AABKLyAEPigbRgoHCf8QDQ7/ZVNHsl5EM3QdFBP/Ri4gdT8hElFFJhZNMh0Tsj40MbJhQC1DYkEsT2lI
        NFVEOjbdaFJFZXRVQkp3WEdFXktBrWNaVrWBZFJBd1lJTYBmVl1jWlbthXFlbXVfU1aSgXdsqqmp/VNT
        U/+Bd3HGAAAAAAAAAAAAAAAAAAAAAAAAAABILh4mNSIYfwUFCP8HBgn/AgED/wIBBv8HBgr/CQgN/wsK
        D/8KCQ7/EA8T/xgWGf8bGx7/HBsf/x0cIP8jIyb/Liww/zMxNf8zMjX/NDI2/zU0N/86OTz/ODg7/zg3
        Ov8/P0L/R0ZJ/0tLT/9OTVD/kZGR/2RkZP9iYWD7tJmHHwAAAAAAAAAAAAAAAAAAAABKLh86QywgaRsS
        D4UdEg+BHxMQgSIWEoEoGxiBLiIfgjAkIYIxJSKCNSomgjswLYM9Mi+CPjMwgj80MYJEODWBWUxIglVL
        SIJJQD6BTEI/gVBGQ4FTSkeCUEZDglBGQ4JYTkuCXlVSg15WU4NzaWR+joeEuqKiov9ZWVn/lIV7jgAA
        AAAAAAAAAAAAAAAAAABdOyYJZEIrD3RROBZ5VDsVfFU7FYZeQxSKY0kVjGZNFYtlThaLZk4WjWlRF41p
        UhiRbVYXkW1WF5BtVheUcVsWl3VfFph4YhaaemQVmHhiFpl5YxaZeWQWmXlkFpl4YxeaeWUYnH1pGp5/
        bBqhg28ZsJWDCrOysOhUVFT/amVi45F7bQ14Zl0BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALu2s4eTk5P/UVFR/1FQUPxXU1LmW1VSvWZc
        Vl4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyn
        pRuQkI/5V1dX/0xMTP9MTEz/TExM/09PT+4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/enckd2deV3VoX5RkXFjGUU9O0U5NTZ7/v+f/8AAAAP4f
        w//wAAAA/g+B//AAAAD+D4H/8AAAAP4Pwf/wAAAA/x/j//AAAAD+AAH/8AAAAPwAAf/wAAAA/AAA//AA
        AAD///z/8AAAAP///H/wAAAA///8f/AAAAD///4/8AAAAPgAAD/wAAAA8AAAP/AAAADx/u8f8AAAAPH+
        7x/wAAAA8f7vD/AAAADh3u8P8AAAAOHO5w/wAAAA4AAAB/AAAADhwABH8AAAAMXe72PwAAAAxd7vY/AA
        AADN3v9j8AAAAMXO53HwAAAAwAAAAfAAAADAAAAQ8AAAAP////jwAAAA////+BAAAAD////8AAAAAP//
        //8AAAAA
</value>
  </data>
</root>